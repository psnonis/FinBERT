00:00:02 WARNING: Logging before flag parsing goes to stderr.
00:00:02 W0803 05:52:54.795804 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.
00:00:02 
00:00:02 W0803 05:52:54.796149 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:26: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.
00:00:02 
00:00:02 W0803 05:52:54.797088 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:495: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.
00:00:02 
00:00:02 W0803 05:52:54.797695 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.
00:00:02 
00:00:02 W0803 05:52:54.797858 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.
00:00:02 
00:00:02 W0803 05:52:54.798035 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.
00:00:02 
00:00:02 W0803 05:52:54.798787 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:416: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.
00:00:02 
00:00:02 W0803 05:52:54.798991 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:420: The name tf.gfile.Glob is deprecated. Please use tf.io.gfile.glob instead.
00:00:02 
00:00:02 W0803 05:52:54.800053 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:422: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.
00:00:02 
00:00:02 I0803 05:52:54.800169 140710370043712 run_pretraining.py:422] *** Input Files ***
00:00:02 I0803 05:52:54.800254 140710370043712 run_pretraining.py:424]   /root/w266-final/eval/bank/bank.tfrecord.50-128-20
00:00:02 I0803 05:52:54.800329 140710370043712 run_pretraining.py:424]   /root/w266-final/eval/bank/bank.tfrecord.75-128-20
00:00:02 I0803 05:52:54.800410 140710370043712 run_pretraining.py:424]   /root/w266-final/eval/bank/bank.tfrecord.66-128-20
00:00:02 I0803 05:52:54.800480 140710370043712 run_pretraining.py:424]   /root/w266-final/eval/bank/bank.tfrecord.00-128-20
00:00:03 W0803 05:52:55.342563 140710370043712 lazy_loader.py:50] 
00:00:03 The TensorFlow contrib module will not be included in TensorFlow 2.0.
00:00:03 For more information, please see:
00:00:03   * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
00:00:03   * https://github.com/tensorflow/addons
00:00:03   * https://github.com/tensorflow/io (for I/O related ops)
00:00:03 If you depend on functionality not listed there, please file an issue.
00:00:03 
00:00:03 W0803 05:52:55.343261 140710370043712 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7ff97ac99d08>) includes params argument, but params are not passed to Estimator.
00:00:03 I0803 05:52:55.344573 140710370043712 estimator.py:209] Using config: {'_model_dir': '/root/w266-final/eval/bank-eval/FinBERT-Combo_128MSL-500K_512MSL-100K', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
00:00:03 graph_options {
00:00:03   rewrite_options {
00:00:03     meta_optimizer_iterations: ONE
00:00:03   }
00:00:03 }
00:00:03 , '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7ff9788dcf98>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
00:00:03 I0803 05:52:55.345247 140710370043712 tpu_context.py:209] _TPUContext: eval_on_tpu True
00:00:03 W0803 05:52:55.345775 140710370043712 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
00:00:03 I0803 05:52:55.345963 140710370043712 run_pretraining.py:471] ***** Running evaluation *****
00:00:03 I0803 05:52:55.346075 140710370043712 run_pretraining.py:472]   Batch size = 8
00:00:03 W0803 05:52:55.357000 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:339: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.
00:00:03 
00:00:03 W0803 05:52:55.383428 140710370043712 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:387: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.data.experimental.map_and_batch(...)`.
00:00:03 W0803 05:52:55.383600 140710370043712 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
00:00:03 W0803 05:52:55.385275 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:395: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.
00:00:03 
00:00:03 W0803 05:52:55.392343 140710370043712 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:402: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.cast` instead.
00:00:03 I0803 05:52:55.422438 140710370043712 estimator.py:1145] Calling model_fn.
00:00:03 I0803 05:52:55.422701 140710370043712 tpu_estimator.py:2965] Running eval on CPU
00:00:03 I0803 05:52:55.423139 140710370043712 run_pretraining.py:119] *** Features ***
00:00:03 I0803 05:52:55.423317 140710370043712 run_pretraining.py:121]   name = input_ids, shape = (8, 128)
00:00:03 I0803 05:52:55.423464 140710370043712 run_pretraining.py:121]   name = input_mask, shape = (8, 128)
00:00:03 I0803 05:52:55.423599 140710370043712 run_pretraining.py:121]   name = masked_lm_ids, shape = (8, 20)
00:00:03 I0803 05:52:55.423730 140710370043712 run_pretraining.py:121]   name = masked_lm_positions, shape = (8, 20)
00:00:03 I0803 05:52:55.423858 140710370043712 run_pretraining.py:121]   name = masked_lm_weights, shape = (8, 20)
00:00:03 I0803 05:52:55.423985 140710370043712 run_pretraining.py:121]   name = next_sentence_labels, shape = (8, 1)
00:00:03 I0803 05:52:55.424108 140710370043712 run_pretraining.py:121]   name = segment_ids, shape = (8, 128)
00:00:03 W0803 05:52:55.424354 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.
00:00:03 
00:00:03 W0803 05:52:55.426401 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.
00:00:03 
00:00:03 W0803 05:52:55.508841 140710370043712 deprecation.py:323] From /root/w266-final/bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use keras.layers.dense instead.
00:00:06 I0803 05:52:58.560006 140710370043712 run_pretraining.py:169] **** Trainable Variables ****
00:00:06 I0803 05:52:58.560261 140710370043712 run_pretraining.py:175]   name = bert/embeddings/word_embeddings:0, shape = (30522, 768)
00:00:06 I0803 05:52:58.560436 140710370043712 run_pretraining.py:175]   name = bert/embeddings/token_type_embeddings:0, shape = (2, 768)
00:00:06 I0803 05:52:58.560588 140710370043712 run_pretraining.py:175]   name = bert/embeddings/position_embeddings:0, shape = (512, 768)
00:00:06 I0803 05:52:58.560725 140710370043712 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.560845 140710370043712 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.560962 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.561076 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.561199 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.561311 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.561432 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.561546 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.561655 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.561768 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.561886 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.562003 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.562124 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.562238 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.562361 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.562486 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.562597 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.562744 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.562856 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.562989 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.563114 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.563238 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.563362 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.563491 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.563622 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.563747 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.563869 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.563988 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.564110 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.564233 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.564355 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.564481 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.564612 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.564733 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.564855 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.564979 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.565102 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.565226 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.565346 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.565470 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.565592 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.565716 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.565836 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.565962 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.566085 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.566210 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.566333 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.566458 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.566584 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.566745 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.566872 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.566996 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.567107 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.567217 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.567337 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.567459 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.567587 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.567699 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.567816 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.567932 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.568052 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.568175 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.568296 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.568420 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.568530 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.568650 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.568761 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.568881 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.569004 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.569116 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.569226 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.569354 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.569475 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.569597 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.569715 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.569834 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.569954 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.570077 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.570197 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.570317 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.570427 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.570543 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.570692 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.570822 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.570944 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.571068 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.571194 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.571320 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.571433 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.571545 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.571663 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.571783 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.571903 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.572017 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.572135 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.572254 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.572379 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.572499 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.572628 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.572745 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.572866 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.572988 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.573111 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.573301 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.573418 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.573542 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.573661 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.573770 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.573888 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.574021 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.574146 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.574271 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.574391 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.574519 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.574664 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.574794 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.574918 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.575040 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.575169 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.575284 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.575405 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.575517 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.575635 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.575753 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.575875 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.575997 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.576117 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.576241 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.576359 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.576467 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.576575 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.576697 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.576808 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.576919 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.577028 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.577149 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.577271 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.577394 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.577511 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.577628 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.577825 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.577960 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.578089 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.578212 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.578331 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.578449 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.578569 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.578726 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.578852 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.578977 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.579102 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.579235 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.579359 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.579485 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.579605 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.579723 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.579843 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.579965 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.580085 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.580207 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.580326 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.580444 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.580564 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.580677 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.580797 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.580911 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.581036 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.581159 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.581280 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.581403 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.581530 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.581640 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.581759 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.581881 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.582004 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.582117 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.582223 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.582331 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.582439 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.582548 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.582690 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.582818 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.582942 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.583072 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.583195 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.583319 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.583437 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.583555 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.583673 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:52:58.583791 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:52:58.583911 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:52:58.584033 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.584154 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.584273 140710370043712 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.584394 140710370043712 run_pretraining.py:175]   name = bert/pooler/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.584525 140710370043712 run_pretraining.py:175]   name = bert/pooler/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.584649 140710370043712 run_pretraining.py:175]   name = cls/predictions/transform/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:52:58.584772 140710370043712 run_pretraining.py:175]   name = cls/predictions/transform/dense/bias:0, shape = (768,)
00:00:06 I0803 05:52:58.584896 140710370043712 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:52:58.585014 140710370043712 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:52:58.585132 140710370043712 run_pretraining.py:175]   name = cls/predictions/output_bias:0, shape = (30522,)
00:00:06 I0803 05:52:58.585244 140710370043712 run_pretraining.py:175]   name = cls/seq_relationship/output_weights:0, shape = (2, 768)
00:00:06 I0803 05:52:58.585371 140710370043712 run_pretraining.py:175]   name = cls/seq_relationship/output_bias:0, shape = (2,)
00:00:06 W0803 05:52:58.593805 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:200: The name tf.metrics.accuracy is deprecated. Please use tf.compat.v1.metrics.accuracy instead.
00:00:06 
00:00:06 W0803 05:52:58.616137 140710370043712 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:204: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.
00:00:06 
00:00:06 I0803 05:52:58.679043 140710370043712 estimator.py:1147] Done calling model_fn.
00:00:06 I0803 05:52:58.705786 140710370043712 evaluation.py:255] Starting evaluation at 2019-08-03T05:52:58Z
00:00:06 W0803 05:52:58.935305 140710370043712 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
00:00:06 Instructions for updating:
00:00:06 Use tf.where in 2.0, which has the same broadcast rule as np.where
00:00:07 I0803 05:52:59.416230 140710370043712 monitored_session.py:240] Graph was finalized.
00:00:07 2019-08-03 05:52:59.416670: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
00:00:07 2019-08-03 05:52:59.426267: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2000024999 Hz
00:00:07 2019-08-03 05:52:59.427047: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x6318af0 executing computations on platform Host. Devices:
00:00:07 2019-08-03 05:52:59.427081: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
00:00:07 W0803 05:52:59.428166 140710370043712 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
00:00:07 Instructions for updating:
00:00:07 Use standard file APIs to check for files with this prefix.
00:00:07 I0803 05:52:59.429494 140710370043712 saver.py:1280] Restoring parameters from /root/w266-final/eval/bank-eval/FinBERT-Combo_128MSL-500K_512MSL-100K/model.ckpt-600000
00:00:07 2019-08-03 05:52:59.723810: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
00:00:08 I0803 05:53:00.334228 140710370043712 session_manager.py:500] Running local_init_op.
00:00:08 I0803 05:53:00.384738 140710370043712 session_manager.py:502] Done running local_init_op.
00:00:17 I0803 05:53:09.205893 140710370043712 evaluation.py:167] Evaluation [10/100]
00:00:25 I0803 05:53:17.161525 140710370043712 evaluation.py:167] Evaluation [20/100]
00:00:33 I0803 05:53:25.019790 140710370043712 evaluation.py:167] Evaluation [30/100]
00:00:40 I0803 05:53:32.816235 140710370043712 evaluation.py:167] Evaluation [40/100]
00:00:48 I0803 05:53:40.625334 140710370043712 evaluation.py:167] Evaluation [50/100]
00:00:56 I0803 05:53:48.499806 140710370043712 evaluation.py:167] Evaluation [60/100]
00:01:04 I0803 05:53:56.341228 140710370043712 evaluation.py:167] Evaluation [70/100]
00:01:12 I0803 05:54:04.190800 140710370043712 evaluation.py:167] Evaluation [80/100]
00:01:20 I0803 05:54:12.039666 140710370043712 evaluation.py:167] Evaluation [90/100]
00:01:27 I0803 05:54:19.929687 140710370043712 evaluation.py:167] Evaluation [100/100]
00:01:28 I0803 05:54:20.034543 140710370043712 evaluation.py:275] Finished evaluation at 2019-08-03-05:54:20
00:01:28 I0803 05:54:20.034988 140710370043712 estimator.py:2039] Saving dict for global step 600000: global_step = 600000, loss = 6.7035627, masked_lm_accuracy = 0.4732237, masked_lm_loss = 3.4249697, next_sentence_accuracy = 0.54, next_sentence_loss = 3.2785943
00:01:28 I0803 05:54:20.667701 140710370043712 estimator.py:2099] Saving 'checkpoint_path' summary for global step 600000: /root/w266-final/eval/bank-eval/FinBERT-Combo_128MSL-500K_512MSL-100K/model.ckpt-600000
00:01:28 I0803 05:54:20.668506 140710370043712 error_handling.py:96] evaluation_loop marked as finished
00:01:28 I0803 05:54:20.668769 140710370043712 run_pretraining.py:485] ***** Eval results *****
00:01:28 I0803 05:54:20.668939 140710370043712 run_pretraining.py:487]   global_step = 600000
00:01:28 I0803 05:54:20.669194 140710370043712 run_pretraining.py:487]   loss = 6.7035627
00:01:28 I0803 05:54:20.669363 140710370043712 run_pretraining.py:487]   masked_lm_accuracy = 0.4732237
00:01:28 I0803 05:54:20.669518 140710370043712 run_pretraining.py:487]   masked_lm_loss = 3.4249697
00:01:28 I0803 05:54:20.669671 140710370043712 run_pretraining.py:487]   next_sentence_accuracy = 0.54
00:01:28 I0803 05:54:20.669818 140710370043712 run_pretraining.py:487]   next_sentence_loss = 3.2785943
