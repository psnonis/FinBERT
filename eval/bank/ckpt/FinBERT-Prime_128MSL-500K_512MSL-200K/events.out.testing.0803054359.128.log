00:00:02 WARNING: Logging before flag parsing goes to stderr.
00:00:02 W0803 05:44:01.235061 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.
00:00:02 
00:00:02 W0803 05:44:01.235398 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:26: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.
00:00:02 
00:00:02 W0803 05:44:01.236332 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:495: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.
00:00:02 
00:00:02 W0803 05:44:01.236945 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.
00:00:02 
00:00:02 W0803 05:44:01.237112 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.
00:00:02 
00:00:02 W0803 05:44:01.237297 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.
00:00:02 
00:00:02 W0803 05:44:01.238028 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:416: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.
00:00:02 
00:00:02 W0803 05:44:01.238234 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:420: The name tf.gfile.Glob is deprecated. Please use tf.io.gfile.glob instead.
00:00:02 
00:00:02 W0803 05:44:01.239319 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:422: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.
00:00:02 
00:00:02 I0803 05:44:01.239452 140441963427648 run_pretraining.py:422] *** Input Files ***
00:00:02 I0803 05:44:01.239557 140441963427648 run_pretraining.py:424]   /root/w266-final/eval/bank/bank.tfrecord.50-128-20
00:00:02 I0803 05:44:01.239650 140441963427648 run_pretraining.py:424]   /root/w266-final/eval/bank/bank.tfrecord.75-128-20
00:00:02 I0803 05:44:01.239737 140441963427648 run_pretraining.py:424]   /root/w266-final/eval/bank/bank.tfrecord.66-128-20
00:00:02 I0803 05:44:01.239821 140441963427648 run_pretraining.py:424]   /root/w266-final/eval/bank/bank.tfrecord.00-128-20
00:00:02 W0803 05:44:01.788300 140441963427648 lazy_loader.py:50] 
00:00:02 The TensorFlow contrib module will not be included in TensorFlow 2.0.
00:00:02 For more information, please see:
00:00:02   * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
00:00:02   * https://github.com/tensorflow/addons
00:00:02   * https://github.com/tensorflow/io (for I/O related ops)
00:00:02 If you depend on functionality not listed there, please file an issue.
00:00:02 
00:00:02 W0803 05:44:01.788951 140441963427648 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7fbafc81ad08>) includes params argument, but params are not passed to Estimator.
00:00:02 I0803 05:44:01.790287 140441963427648 estimator.py:209] Using config: {'_model_dir': '/root/w266-final/eval/bank-eval/FinBERT-Prime_128MSL-500K_512MSL-200K', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
00:00:02 graph_options {
00:00:02   rewrite_options {
00:00:02     meta_optimizer_iterations: ONE
00:00:02   }
00:00:02 }
00:00:02 , '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7fbaf6445f98>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
00:00:02 I0803 05:44:01.791008 140441963427648 tpu_context.py:209] _TPUContext: eval_on_tpu True
00:00:02 W0803 05:44:01.791510 140441963427648 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
00:00:02 I0803 05:44:01.791651 140441963427648 run_pretraining.py:471] ***** Running evaluation *****
00:00:02 I0803 05:44:01.791765 140441963427648 run_pretraining.py:472]   Batch size = 8
00:00:02 W0803 05:44:01.802699 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:339: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.
00:00:02 
00:00:02 W0803 05:44:01.828991 140441963427648 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:387: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
00:00:02 Instructions for updating:
00:00:02 Use `tf.data.experimental.map_and_batch(...)`.
00:00:02 W0803 05:44:01.829160 140441963427648 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
00:00:02 Instructions for updating:
00:00:02 Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
00:00:02 W0803 05:44:01.830902 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:395: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.
00:00:02 
00:00:02 W0803 05:44:01.838041 140441963427648 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:402: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
00:00:02 Instructions for updating:
00:00:02 Use `tf.cast` instead.
00:00:02 I0803 05:44:01.868520 140441963427648 estimator.py:1145] Calling model_fn.
00:00:02 I0803 05:44:01.868760 140441963427648 tpu_estimator.py:2965] Running eval on CPU
00:00:02 I0803 05:44:01.869217 140441963427648 run_pretraining.py:119] *** Features ***
00:00:02 I0803 05:44:01.869395 140441963427648 run_pretraining.py:121]   name = input_ids, shape = (8, 128)
00:00:02 I0803 05:44:01.869544 140441963427648 run_pretraining.py:121]   name = input_mask, shape = (8, 128)
00:00:02 I0803 05:44:01.869683 140441963427648 run_pretraining.py:121]   name = masked_lm_ids, shape = (8, 20)
00:00:02 I0803 05:44:01.869820 140441963427648 run_pretraining.py:121]   name = masked_lm_positions, shape = (8, 20)
00:00:02 I0803 05:44:01.869950 140441963427648 run_pretraining.py:121]   name = masked_lm_weights, shape = (8, 20)
00:00:02 I0803 05:44:01.870077 140441963427648 run_pretraining.py:121]   name = next_sentence_labels, shape = (8, 1)
00:00:02 I0803 05:44:01.870202 140441963427648 run_pretraining.py:121]   name = segment_ids, shape = (8, 128)
00:00:02 W0803 05:44:01.870448 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.
00:00:02 
00:00:02 W0803 05:44:01.872585 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.
00:00:02 
00:00:02 W0803 05:44:01.956222 140441963427648 deprecation.py:323] From /root/w266-final/bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
00:00:02 Instructions for updating:
00:00:02 Use keras.layers.dense instead.
00:00:06 I0803 05:44:05.041228 140441963427648 run_pretraining.py:169] **** Trainable Variables ****
00:00:06 I0803 05:44:05.041482 140441963427648 run_pretraining.py:175]   name = bert/embeddings/word_embeddings:0, shape = (30522, 768)
00:00:06 I0803 05:44:05.041636 140441963427648 run_pretraining.py:175]   name = bert/embeddings/token_type_embeddings:0, shape = (2, 768)
00:00:06 I0803 05:44:05.041791 140441963427648 run_pretraining.py:175]   name = bert/embeddings/position_embeddings:0, shape = (512, 768)
00:00:06 I0803 05:44:05.041935 140441963427648 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.042069 140441963427648 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.042203 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.042335 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.042463 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.042594 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.042755 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.042885 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.043012 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.043148 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.043273 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.043396 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.043521 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.043649 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.043774 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.043898 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.044020 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.044140 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.044263 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.044399 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.044530 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.044657 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.044786 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.044924 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.045054 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.045185 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.045308 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.045429 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.045554 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.045680 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.045804 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.045926 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.046047 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.046168 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.046294 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.046429 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.046559 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.046718 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.046844 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.046969 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.047093 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.047217 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.047338 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.047457 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.047578 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.047702 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.047827 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.047952 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.048080 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.048208 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.048334 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.048459 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.048585 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.048711 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.048835 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.048959 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.049089 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.049219 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.049353 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.049474 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.049598 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.049724 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.049848 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.049980 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.050101 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.050222 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.050344 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.050470 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.050594 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.050750 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.050874 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.051007 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.051131 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.051257 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.051379 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.051501 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.051623 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.051746 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.051867 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.052000 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.052123 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.052244 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.052365 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.052489 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.052612 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.052737 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.052866 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.052992 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.053125 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.053259 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.053382 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.053502 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.053625 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.053749 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.053874 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.054005 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.054126 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.054245 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.054367 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.054492 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.054642 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.054774 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.054900 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.055088 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.055217 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.055350 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.055473 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.055593 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.055714 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.055845 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.055973 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.056101 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.056224 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.056344 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.056467 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.056592 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.056716 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.056840 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.056967 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.057094 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.057218 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.057342 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.057462 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.057581 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.057702 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.057825 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.057948 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.058073 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.058192 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.058315 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.058439 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.058564 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.058718 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.058846 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.058971 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.059097 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.059222 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.059349 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.059469 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.059590 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.059724 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.059852 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.060035 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.060172 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.060295 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.060416 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.060538 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.060664 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.060793 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.060924 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.061049 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.061177 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.061305 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.061432 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.061553 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.061673 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.061795 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.061920 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.062042 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.062166 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.062286 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.062406 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.062527 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.062677 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.062805 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.062932 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.063060 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.063197 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.063323 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.063450 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.063579 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.063704 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.063827 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.063952 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.064075 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.064199 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.064318 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.064437 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.064557 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.064680 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.064800 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.064924 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.065045 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.065170 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.065291 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.065414 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.065533 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.065652 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.065772 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 05:44:05.065901 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 05:44:05.066028 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 05:44:05.066152 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.066271 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.066389 140441963427648 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.066509 140441963427648 run_pretraining.py:175]   name = bert/pooler/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.066656 140441963427648 run_pretraining.py:175]   name = bert/pooler/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.066784 140441963427648 run_pretraining.py:175]   name = cls/predictions/transform/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 05:44:05.066910 140441963427648 run_pretraining.py:175]   name = cls/predictions/transform/dense/bias:0, shape = (768,)
00:00:06 I0803 05:44:05.067028 140441963427648 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 05:44:05.067146 140441963427648 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 05:44:05.067264 140441963427648 run_pretraining.py:175]   name = cls/predictions/output_bias:0, shape = (30522,)
00:00:06 I0803 05:44:05.067392 140441963427648 run_pretraining.py:175]   name = cls/seq_relationship/output_weights:0, shape = (2, 768)
00:00:06 I0803 05:44:05.067519 140441963427648 run_pretraining.py:175]   name = cls/seq_relationship/output_bias:0, shape = (2,)
00:00:06 W0803 05:44:05.075813 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:200: The name tf.metrics.accuracy is deprecated. Please use tf.compat.v1.metrics.accuracy instead.
00:00:06 
00:00:06 W0803 05:44:05.097809 140441963427648 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:204: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.
00:00:06 
00:00:06 I0803 05:44:05.160872 140441963427648 estimator.py:1147] Done calling model_fn.
00:00:06 I0803 05:44:05.187705 140441963427648 evaluation.py:255] Starting evaluation at 2019-08-03T05:44:05Z
00:00:06 W0803 05:44:05.418498 140441963427648 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
00:00:06 Instructions for updating:
00:00:06 Use tf.where in 2.0, which has the same broadcast rule as np.where
00:00:06 I0803 05:44:05.900603 140441963427648 monitored_session.py:240] Graph was finalized.
00:00:06 2019-08-03 05:44:05.901040: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
00:00:06 2019-08-03 05:44:05.910477: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2000024999 Hz
00:00:06 2019-08-03 05:44:05.911235: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5c77060 executing computations on platform Host. Devices:
00:00:06 2019-08-03 05:44:05.911269: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
00:00:06 W0803 05:44:05.912322 140441963427648 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
00:00:06 Instructions for updating:
00:00:06 Use standard file APIs to check for files with this prefix.
00:00:06 I0803 05:44:05.913818 140441963427648 saver.py:1280] Restoring parameters from /root/w266-final/eval/bank-eval/FinBERT-Prime_128MSL-500K_512MSL-200K/model.ckpt-700000
00:00:07 2019-08-03 05:44:06.210220: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
00:00:07 I0803 05:44:06.810553 140441963427648 session_manager.py:500] Running local_init_op.
00:00:07 I0803 05:44:06.861461 140441963427648 session_manager.py:502] Done running local_init_op.
00:00:16 I0803 05:44:15.682004 140441963427648 evaluation.py:167] Evaluation [10/100]
00:00:24 I0803 05:44:23.553153 140441963427648 evaluation.py:167] Evaluation [20/100]
00:00:32 I0803 05:44:31.525107 140441963427648 evaluation.py:167] Evaluation [30/100]
00:00:40 I0803 05:44:39.379594 140441963427648 evaluation.py:167] Evaluation [40/100]
00:00:48 I0803 05:44:47.291664 140441963427648 evaluation.py:167] Evaluation [50/100]
00:00:56 I0803 05:44:55.161291 140441963427648 evaluation.py:167] Evaluation [60/100]
00:01:04 I0803 05:45:03.042692 140441963427648 evaluation.py:167] Evaluation [70/100]
00:01:11 I0803 05:45:10.916613 140441963427648 evaluation.py:167] Evaluation [80/100]
00:01:19 I0803 05:45:18.798111 140441963427648 evaluation.py:167] Evaluation [90/100]
00:01:27 I0803 05:45:26.611841 140441963427648 evaluation.py:167] Evaluation [100/100]
00:01:27 I0803 05:45:26.715415 140441963427648 evaluation.py:275] Finished evaluation at 2019-08-03-05:45:26
00:01:27 I0803 05:45:26.715824 140441963427648 estimator.py:2039] Saving dict for global step 700000: global_step = 700000, loss = 6.1292048, masked_lm_accuracy = 0.4200658, masked_lm_loss = 3.938445, next_sentence_accuracy = 0.58125, next_sentence_loss = 2.1907606
00:01:28 I0803 05:45:27.283997 140441963427648 estimator.py:2099] Saving 'checkpoint_path' summary for global step 700000: /root/w266-final/eval/bank-eval/FinBERT-Prime_128MSL-500K_512MSL-200K/model.ckpt-700000
00:01:28 I0803 05:45:27.284807 140441963427648 error_handling.py:96] evaluation_loop marked as finished
00:01:28 I0803 05:45:27.285071 140441963427648 run_pretraining.py:485] ***** Eval results *****
00:01:28 I0803 05:45:27.285241 140441963427648 run_pretraining.py:487]   global_step = 700000
00:01:28 I0803 05:45:27.285499 140441963427648 run_pretraining.py:487]   loss = 6.1292048
00:01:28 I0803 05:45:27.285666 140441963427648 run_pretraining.py:487]   masked_lm_accuracy = 0.4200658
00:01:28 I0803 05:45:27.285821 140441963427648 run_pretraining.py:487]   masked_lm_loss = 3.938445
00:01:28 I0803 05:45:27.285968 140441963427648 run_pretraining.py:487]   next_sentence_accuracy = 0.58125
00:01:28 I0803 05:45:27.286110 140441963427648 run_pretraining.py:487]   next_sentence_loss = 2.1907606
