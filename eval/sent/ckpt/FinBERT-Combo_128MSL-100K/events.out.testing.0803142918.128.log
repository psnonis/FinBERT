00:00:02 WARNING: Logging before flag parsing goes to stderr.
00:00:02 W0803 14:29:21.165385 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.
00:00:02 
00:00:02 W0803 14:29:21.165723 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:26: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.
00:00:02 
00:00:02 W0803 14:29:21.166694 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:495: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.
00:00:02 
00:00:02 W0803 14:29:21.167301 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.
00:00:02 
00:00:02 W0803 14:29:21.167469 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.
00:00:02 
00:00:02 W0803 14:29:21.167650 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.
00:00:02 
00:00:02 W0803 14:29:21.168373 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:416: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.
00:00:02 
00:00:02 W0803 14:29:21.168578 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:420: The name tf.gfile.Glob is deprecated. Please use tf.io.gfile.glob instead.
00:00:02 
00:00:02 W0803 14:29:21.169716 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:422: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.
00:00:02 
00:00:02 I0803 14:29:21.169937 139783116531520 run_pretraining.py:422] *** Input Files ***
00:00:02 I0803 14:29:21.170048 139783116531520 run_pretraining.py:424]   /root/w266-final/eval/sent/data/sent.tfrecord.00-128-20
00:00:02 I0803 14:29:21.170147 139783116531520 run_pretraining.py:424]   /root/w266-final/eval/sent/data/sent.tfrecord.66-128-20
00:00:02 I0803 14:29:21.170240 139783116531520 run_pretraining.py:424]   /root/w266-final/eval/sent/data/sent.tfrecord.50-128-20
00:00:02 I0803 14:29:21.170330 139783116531520 run_pretraining.py:424]   /root/w266-final/eval/sent/data/sent.tfrecord.75-128-20
00:00:02 W0803 14:29:21.728406 139783116531520 lazy_loader.py:50] 
00:00:02 The TensorFlow contrib module will not be included in TensorFlow 2.0.
00:00:02 For more information, please see:
00:00:02   * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
00:00:02   * https://github.com/tensorflow/addons
00:00:02   * https://github.com/tensorflow/io (for I/O related ops)
00:00:02 If you depend on functionality not listed there, please file an issue.
00:00:02 
00:00:02 W0803 14:29:21.729070 139783116531520 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7f21962bde18>) includes params argument, but params are not passed to Estimator.
00:00:02 I0803 14:29:21.730385 139783116531520 estimator.py:209] Using config: {'_model_dir': '/root/w266-final/eval/sent/ckpt/FinBERT-Combo_128MSL-100K', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
00:00:02 graph_options {
00:00:02   rewrite_options {
00:00:02     meta_optimizer_iterations: ONE
00:00:02   }
00:00:02 }
00:00:02 , '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f2187edef60>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
00:00:02 I0803 14:29:21.731141 139783116531520 tpu_context.py:209] _TPUContext: eval_on_tpu True
00:00:02 W0803 14:29:21.731672 139783116531520 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
00:00:02 I0803 14:29:21.731813 139783116531520 run_pretraining.py:471] ***** Running evaluation *****
00:00:02 I0803 14:29:21.731929 139783116531520 run_pretraining.py:472]   Batch size = 8
00:00:02 W0803 14:29:21.743286 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:339: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.
00:00:02 
00:00:02 W0803 14:29:21.770570 139783116531520 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:387: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
00:00:02 Instructions for updating:
00:00:02 Use `tf.data.experimental.map_and_batch(...)`.
00:00:02 W0803 14:29:21.770776 139783116531520 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
00:00:02 Instructions for updating:
00:00:02 Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
00:00:02 W0803 14:29:21.772535 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:395: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.
00:00:02 
00:00:02 W0803 14:29:21.779969 139783116531520 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:402: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
00:00:02 Instructions for updating:
00:00:02 Use `tf.cast` instead.
00:00:02 I0803 14:29:21.811464 139783116531520 estimator.py:1145] Calling model_fn.
00:00:02 I0803 14:29:21.811692 139783116531520 tpu_estimator.py:2965] Running eval on CPU
00:00:02 I0803 14:29:21.812139 139783116531520 run_pretraining.py:119] *** Features ***
00:00:02 I0803 14:29:21.812324 139783116531520 run_pretraining.py:121]   name = input_ids, shape = (8, 128)
00:00:02 I0803 14:29:21.812481 139783116531520 run_pretraining.py:121]   name = input_mask, shape = (8, 128)
00:00:02 I0803 14:29:21.812624 139783116531520 run_pretraining.py:121]   name = masked_lm_ids, shape = (8, 20)
00:00:02 I0803 14:29:21.812772 139783116531520 run_pretraining.py:121]   name = masked_lm_positions, shape = (8, 20)
00:00:02 I0803 14:29:21.812910 139783116531520 run_pretraining.py:121]   name = masked_lm_weights, shape = (8, 20)
00:00:02 I0803 14:29:21.813042 139783116531520 run_pretraining.py:121]   name = next_sentence_labels, shape = (8, 1)
00:00:02 I0803 14:29:21.813172 139783116531520 run_pretraining.py:121]   name = segment_ids, shape = (8, 128)
00:00:02 W0803 14:29:21.813419 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.
00:00:02 
00:00:02 W0803 14:29:21.815595 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.
00:00:02 
00:00:02 W0803 14:29:21.902287 139783116531520 deprecation.py:323] From /root/w266-final/bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
00:00:02 Instructions for updating:
00:00:02 Use keras.layers.dense instead.
00:00:06 I0803 14:29:25.088797 139783116531520 run_pretraining.py:169] **** Trainable Variables ****
00:00:06 I0803 14:29:25.089053 139783116531520 run_pretraining.py:175]   name = bert/embeddings/word_embeddings:0, shape = (30522, 768)
00:00:06 I0803 14:29:25.089232 139783116531520 run_pretraining.py:175]   name = bert/embeddings/token_type_embeddings:0, shape = (2, 768)
00:00:06 I0803 14:29:25.089393 139783116531520 run_pretraining.py:175]   name = bert/embeddings/position_embeddings:0, shape = (512, 768)
00:00:06 I0803 14:29:25.089539 139783116531520 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.089676 139783116531520 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.089812 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.089949 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.090082 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.090216 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.090347 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.090479 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.090635 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.090776 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.090905 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.091032 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.091161 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.091293 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.091423 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.091556 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.091683 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.091809 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.091937 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.092068 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.092201 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.092341 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.092473 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.092604 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.092745 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.092878 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.093006 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.093134 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.093263 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.093394 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.093523 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.093653 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.093781 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.093908 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.094035 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.094174 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.094306 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.094437 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.094567 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.094731 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.094865 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.095006 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.095136 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.095262 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.095390 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.095520 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.095650 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.095789 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.095922 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.096052 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.096190 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.096324 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.096452 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.096582 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.096710 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.096840 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.096969 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.097100 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.097227 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.097353 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.097482 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.097613 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.097743 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.097875 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.098010 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.098137 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.098266 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.098396 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.098525 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.098682 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.098816 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.098954 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.099083 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.099214 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.099341 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.099468 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.099598 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.099730 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.099858 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.099989 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.100125 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.100255 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.100384 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.100514 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.100645 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.100776 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.100905 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.101042 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.101174 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.101315 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.101442 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.101567 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.101695 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.101824 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.101958 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.102090 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.102215 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.102341 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.102468 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.102598 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.102758 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.102889 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.103018 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.103212 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.103347 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.103480 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.103614 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.103741 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.103868 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.103998 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.104129 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.104269 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.104397 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.104523 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.104652 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.104783 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.104913 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.105054 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.105195 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.105327 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.105455 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.105586 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.105716 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.105844 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.105974 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.106105 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.106233 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.106362 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.106489 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.106643 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.106778 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.106910 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.107039 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.107170 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.107297 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.107428 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.107557 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.107686 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.107812 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.107936 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.108063 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.108284 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.108428 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.108561 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.108688 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.108814 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.108942 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.109071 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.109200 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.109338 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.109472 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.109604 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.109732 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.109864 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.109989 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.110116 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.110243 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.110372 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.110499 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.110653 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.110785 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.110911 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.111039 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.111170 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.111298 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.111435 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.111565 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.111696 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.111824 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.111954 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.112079 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.112212 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.112340 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.112473 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.112609 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.112740 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.112866 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.112990 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.113118 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.113248 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.113375 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.113503 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.113630 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.113757 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.113883 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.114010 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.114135 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.114257 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.114382 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 14:29:25.114517 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 14:29:25.114669 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 14:29:25.114808 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.114934 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.115070 139783116531520 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.115203 139783116531520 run_pretraining.py:175]   name = bert/pooler/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.115334 139783116531520 run_pretraining.py:175]   name = bert/pooler/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.115462 139783116531520 run_pretraining.py:175]   name = cls/predictions/transform/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 14:29:25.115589 139783116531520 run_pretraining.py:175]   name = cls/predictions/transform/dense/bias:0, shape = (768,)
00:00:06 I0803 14:29:25.115717 139783116531520 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 14:29:25.115839 139783116531520 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 14:29:25.115962 139783116531520 run_pretraining.py:175]   name = cls/predictions/output_bias:0, shape = (30522,)
00:00:06 I0803 14:29:25.116088 139783116531520 run_pretraining.py:175]   name = cls/seq_relationship/output_weights:0, shape = (2, 768)
00:00:06 I0803 14:29:25.116218 139783116531520 run_pretraining.py:175]   name = cls/seq_relationship/output_bias:0, shape = (2,)
00:00:06 W0803 14:29:25.124847 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:200: The name tf.metrics.accuracy is deprecated. Please use tf.compat.v1.metrics.accuracy instead.
00:00:06 
00:00:06 W0803 14:29:25.147861 139783116531520 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:204: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.
00:00:06 
00:00:06 I0803 14:29:25.213570 139783116531520 estimator.py:1147] Done calling model_fn.
00:00:06 I0803 14:29:25.241555 139783116531520 evaluation.py:255] Starting evaluation at 2019-08-03T14:29:25Z
00:00:06 W0803 14:29:25.481467 139783116531520 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
00:00:06 Instructions for updating:
00:00:06 Use tf.where in 2.0, which has the same broadcast rule as np.where
00:00:06 I0803 14:29:25.982908 139783116531520 monitored_session.py:240] Graph was finalized.
00:00:06 2019-08-03 14:29:25.983347: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
00:00:06 2019-08-03 14:29:25.992991: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2000024999 Hz
00:00:06 2019-08-03 14:29:25.993739: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x2044a50 executing computations on platform Host. Devices:
00:00:06 2019-08-03 14:29:25.993775: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
00:00:06 W0803 14:29:25.994680 139783116531520 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
00:00:06 Instructions for updating:
00:00:06 Use standard file APIs to check for files with this prefix.
00:00:06 I0803 14:29:25.996226 139783116531520 saver.py:1280] Restoring parameters from /root/w266-final/eval/sent/ckpt/FinBERT-Combo_128MSL-100K/model.ckpt-100000
00:00:07 2019-08-03 14:29:26.306415: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
00:00:07 I0803 14:29:26.895036 139783116531520 session_manager.py:500] Running local_init_op.
00:00:07 I0803 14:29:26.946047 139783116531520 session_manager.py:502] Done running local_init_op.
00:00:16 I0803 14:29:35.753859 139783116531520 evaluation.py:167] Evaluation [10/100]
00:00:24 I0803 14:29:43.700201 139783116531520 evaluation.py:167] Evaluation [20/100]
00:00:32 I0803 14:29:51.606953 139783116531520 evaluation.py:167] Evaluation [30/100]
00:00:40 I0803 14:29:59.502547 139783116531520 evaluation.py:167] Evaluation [40/100]
00:00:48 I0803 14:30:07.389513 139783116531520 evaluation.py:167] Evaluation [50/100]
00:00:56 I0803 14:30:15.335607 139783116531520 evaluation.py:167] Evaluation [60/100]
00:01:04 I0803 14:30:23.272187 139783116531520 evaluation.py:167] Evaluation [70/100]
00:01:12 I0803 14:30:31.221609 139783116531520 evaluation.py:167] Evaluation [80/100]
00:01:20 I0803 14:30:39.125246 139783116531520 evaluation.py:167] Evaluation [90/100]
00:01:28 I0803 14:30:47.073028 139783116531520 evaluation.py:167] Evaluation [100/100]
00:01:28 I0803 14:30:47.175653 139783116531520 evaluation.py:275] Finished evaluation at 2019-08-03-14:30:47
00:01:28 I0803 14:30:47.176074 139783116531520 estimator.py:2039] Saving dict for global step 100000: global_step = 100000, loss = 5.665321, masked_lm_accuracy = 0.49414474, masked_lm_loss = 3.2660348, next_sentence_accuracy = 0.56625, next_sentence_loss = 2.3992875
00:01:28 I0803 14:30:47.775665 139783116531520 estimator.py:2099] Saving 'checkpoint_path' summary for global step 100000: /root/w266-final/eval/sent/ckpt/FinBERT-Combo_128MSL-100K/model.ckpt-100000
00:01:28 I0803 14:30:47.776535 139783116531520 error_handling.py:96] evaluation_loop marked as finished
00:01:28 I0803 14:30:47.776813 139783116531520 run_pretraining.py:485] ***** Eval results *****
00:01:28 I0803 14:30:47.776993 139783116531520 run_pretraining.py:487]   global_step = 100000
00:01:28 I0803 14:30:47.777261 139783116531520 run_pretraining.py:487]   loss = 5.665321
00:01:28 I0803 14:30:47.777438 139783116531520 run_pretraining.py:487]   masked_lm_accuracy = 0.49414474
00:01:28 I0803 14:30:47.777603 139783116531520 run_pretraining.py:487]   masked_lm_loss = 3.2660348
00:01:28 I0803 14:30:47.777762 139783116531520 run_pretraining.py:487]   next_sentence_accuracy = 0.56625
00:01:28 I0803 14:30:47.777919 139783116531520 run_pretraining.py:487]   next_sentence_loss = 2.3992875
