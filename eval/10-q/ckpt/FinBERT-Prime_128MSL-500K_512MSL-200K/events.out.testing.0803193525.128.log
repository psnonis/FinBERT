00:00:03 WARNING: Logging before flag parsing goes to stderr.
00:00:03 W0803 19:35:28.126596 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.
00:00:03 
00:00:03 W0803 19:35:28.126978 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:26: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.
00:00:03 
00:00:03 W0803 19:35:28.128064 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:495: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.
00:00:03 
00:00:03 W0803 19:35:28.128735 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.
00:00:03 
00:00:03 W0803 19:35:28.128962 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.
00:00:03 
00:00:03 W0803 19:35:28.129204 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.
00:00:03 
00:00:03 W0803 19:35:28.129988 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:416: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.
00:00:03 
00:00:03 W0803 19:35:28.130284 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:420: The name tf.gfile.Glob is deprecated. Please use tf.io.gfile.glob instead.
00:00:03 
00:00:03 W0803 19:35:28.201896 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:422: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.
00:00:03 
00:00:03 I0803 19:35:28.202089 140035881592640 run_pretraining.py:422] *** Input Files ***
00:00:03 I0803 19:35:28.202331 140035881592640 run_pretraining.py:424]   /root/w266-final/eval/10-q/data/2018.tfrecord.sm-128-20
00:00:03 W0803 19:35:28.740262 140035881592640 lazy_loader.py:50] 
00:00:03 The TensorFlow contrib module will not be included in TensorFlow 2.0.
00:00:03 For more information, please see:
00:00:03   * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
00:00:03   * https://github.com/tensorflow/addons
00:00:03   * https://github.com/tensorflow/io (for I/O related ops)
00:00:03 If you depend on functionality not listed there, please file an issue.
00:00:03 
00:00:03 W0803 19:35:28.741002 140035881592640 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7f5c7024ad90>) includes params argument, but params are not passed to Estimator.
00:00:03 I0803 19:35:28.742339 140035881592640 estimator.py:209] Using config: {'_model_dir': '/root/w266-final/eval/10-q/ckpt/FinBERT-Prime_128MSL-500K_512MSL-200K', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
00:00:03 graph_options {
00:00:03   rewrite_options {
00:00:03     meta_optimizer_iterations: ONE
00:00:03   }
00:00:03 }
00:00:03 , '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f5c69e3efd0>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
00:00:03 I0803 19:35:28.743144 140035881592640 tpu_context.py:209] _TPUContext: eval_on_tpu True
00:00:03 W0803 19:35:28.743666 140035881592640 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
00:00:03 I0803 19:35:28.743914 140035881592640 run_pretraining.py:471] ***** Running evaluation *****
00:00:03 I0803 19:35:28.744075 140035881592640 run_pretraining.py:472]   Batch size = 8
00:00:03 W0803 19:35:28.781471 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:339: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.
00:00:03 
00:00:03 W0803 19:35:28.808289 140035881592640 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:387: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.data.experimental.map_and_batch(...)`.
00:00:03 W0803 19:35:28.808458 140035881592640 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
00:00:03 W0803 19:35:28.810312 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:395: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.
00:00:03 
00:00:03 W0803 19:35:28.817557 140035881592640 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:402: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.cast` instead.
00:00:03 I0803 19:35:28.848284 140035881592640 estimator.py:1145] Calling model_fn.
00:00:03 I0803 19:35:28.848568 140035881592640 tpu_estimator.py:2965] Running eval on CPU
00:00:03 I0803 19:35:28.849060 140035881592640 run_pretraining.py:119] *** Features ***
00:00:03 I0803 19:35:28.849289 140035881592640 run_pretraining.py:121]   name = input_ids, shape = (8, 128)
00:00:03 I0803 19:35:28.849501 140035881592640 run_pretraining.py:121]   name = input_mask, shape = (8, 128)
00:00:03 I0803 19:35:28.849700 140035881592640 run_pretraining.py:121]   name = masked_lm_ids, shape = (8, 20)
00:00:03 I0803 19:35:28.849901 140035881592640 run_pretraining.py:121]   name = masked_lm_positions, shape = (8, 20)
00:00:03 I0803 19:35:28.850093 140035881592640 run_pretraining.py:121]   name = masked_lm_weights, shape = (8, 20)
00:00:03 I0803 19:35:28.850281 140035881592640 run_pretraining.py:121]   name = next_sentence_labels, shape = (8, 1)
00:00:03 I0803 19:35:28.850468 140035881592640 run_pretraining.py:121]   name = segment_ids, shape = (8, 128)
00:00:03 W0803 19:35:28.850789 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.
00:00:03 
00:00:03 W0803 19:35:28.852923 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.
00:00:03 
00:00:03 W0803 19:35:28.936084 140035881592640 deprecation.py:323] From /root/w266-final/bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use keras.layers.dense instead.
00:00:07 I0803 19:35:32.004381 140035881592640 run_pretraining.py:169] **** Trainable Variables ****
00:00:07 I0803 19:35:32.004639 140035881592640 run_pretraining.py:175]   name = bert/embeddings/word_embeddings:0, shape = (30522, 768)
00:00:07 I0803 19:35:32.004963 140035881592640 run_pretraining.py:175]   name = bert/embeddings/token_type_embeddings:0, shape = (2, 768)
00:00:07 I0803 19:35:32.005177 140035881592640 run_pretraining.py:175]   name = bert/embeddings/position_embeddings:0, shape = (512, 768)
00:00:07 I0803 19:35:32.005378 140035881592640 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.005570 140035881592640 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.005759 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.005952 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.006139 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.006326 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.006511 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.006724 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.006909 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.007094 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.007274 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.007452 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.007632 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.007827 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.008011 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.008197 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.008378 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.008557 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.008740 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.008933 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.009115 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.009299 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.009486 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.009675 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.009860 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.010047 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.010235 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.010417 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.010600 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.010768 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.010945 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.011124 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.011303 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.011480 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.011660 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.011850 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.012033 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.012215 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.012396 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.012578 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.012758 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.012949 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.013130 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.013316 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.013494 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.013683 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.013863 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.014047 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.014225 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.014420 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.014601 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.014815 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.014998 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.015180 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.015368 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.015552 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.015741 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.015924 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.016101 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.016278 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.016456 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.016638 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.016817 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.016999 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.017177 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.017353 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.017531 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.017713 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.017892 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.018082 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.018263 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.018445 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.018649 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.018834 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.019012 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.019188 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.019368 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.019549 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.019728 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.019917 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.020096 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.020273 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.020461 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.020644 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.020825 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.021006 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.021195 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.021380 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.021561 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.021744 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.021933 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.022109 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.022294 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.022476 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.022686 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.022880 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.023060 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.023238 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.023417 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.023609 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.023789 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.023971 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.024151 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.024397 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.024581 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.024764 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.024943 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.025120 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.025298 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.025489 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.025680 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.025866 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.026044 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.026221 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.026401 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.026583 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.026798 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.026972 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.027151 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.027333 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.027512 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.027693 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.027870 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.028046 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.028224 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.028405 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.028584 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.028765 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.028941 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.029115 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.029294 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.029473 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.029653 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.029833 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.030013 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.030195 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.030374 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.030554 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.030769 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.030950 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.031150 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.031339 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.031581 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.031765 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.031953 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.032132 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.032322 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.032503 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.032689 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.032879 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.033061 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.033245 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.033424 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.033605 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.033781 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.033958 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.034137 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.034317 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.034494 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.034695 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.034874 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.035054 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.035232 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.035421 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.035601 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.035782 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.035976 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.036160 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.036340 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.036529 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.036708 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.036886 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.037071 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.037253 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.037431 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.037622 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.037798 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.037974 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.038153 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.038335 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.038513 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.038717 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.038896 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.039079 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.039264 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.039445 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.039622 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.039802 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.039980 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:07 I0803 19:35:32.040159 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,)
00:00:07 I0803 19:35:32.040340 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768)
00:00:07 I0803 19:35:32.040520 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.040695 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.040870 140035881592640 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.041054 140035881592640 run_pretraining.py:175]   name = bert/pooler/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.041238 140035881592640 run_pretraining.py:175]   name = bert/pooler/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.041415 140035881592640 run_pretraining.py:175]   name = cls/predictions/transform/dense/kernel:0, shape = (768, 768)
00:00:07 I0803 19:35:32.041594 140035881592640 run_pretraining.py:175]   name = cls/predictions/transform/dense/bias:0, shape = (768,)
00:00:07 I0803 19:35:32.041773 140035881592640 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/beta:0, shape = (768,)
00:00:07 I0803 19:35:32.041956 140035881592640 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/gamma:0, shape = (768,)
00:00:07 I0803 19:35:32.042131 140035881592640 run_pretraining.py:175]   name = cls/predictions/output_bias:0, shape = (30522,)
00:00:07 I0803 19:35:32.042317 140035881592640 run_pretraining.py:175]   name = cls/seq_relationship/output_weights:0, shape = (2, 768)
00:00:07 I0803 19:35:32.042500 140035881592640 run_pretraining.py:175]   name = cls/seq_relationship/output_bias:0, shape = (2,)
00:00:07 W0803 19:35:32.050876 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:200: The name tf.metrics.accuracy is deprecated. Please use tf.compat.v1.metrics.accuracy instead.
00:00:07 
00:00:07 W0803 19:35:32.072956 140035881592640 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:204: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.
00:00:07 
00:00:07 I0803 19:35:32.136069 140035881592640 estimator.py:1147] Done calling model_fn.
00:00:07 I0803 19:35:32.162935 140035881592640 evaluation.py:255] Starting evaluation at 2019-08-03T19:35:32Z
00:00:07 W0803 19:35:32.392308 140035881592640 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
00:00:07 Instructions for updating:
00:00:07 Use tf.where in 2.0, which has the same broadcast rule as np.where
00:00:07 I0803 19:35:32.874277 140035881592640 monitored_session.py:240] Graph was finalized.
00:00:07 2019-08-03 19:35:32.874740: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
00:00:07 2019-08-03 19:35:32.884195: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2000024999 Hz
00:00:07 2019-08-03 19:35:32.885038: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x642fca0 executing computations on platform Host. Devices:
00:00:07 2019-08-03 19:35:32.885073: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
00:00:07 W0803 19:35:32.886332 140035881592640 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
00:00:07 Instructions for updating:
00:00:07 Use standard file APIs to check for files with this prefix.
00:00:07 I0803 19:35:32.887771 140035881592640 saver.py:1280] Restoring parameters from /root/w266-final/eval/10-q/ckpt/FinBERT-Prime_128MSL-500K_512MSL-200K/model.ckpt-700000
00:00:08 2019-08-03 19:35:33.183384: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
00:00:16 I0803 19:35:41.378931 140035881592640 session_manager.py:500] Running local_init_op.
00:00:16 I0803 19:35:41.428446 140035881592640 session_manager.py:502] Done running local_init_op.
00:00:25 I0803 19:35:50.202395 140035881592640 evaluation.py:167] Evaluation [10/100]
00:00:33 I0803 19:35:58.187814 140035881592640 evaluation.py:167] Evaluation [20/100]
00:00:41 I0803 19:36:06.163227 140035881592640 evaluation.py:167] Evaluation [30/100]
00:00:49 I0803 19:36:14.170765 140035881592640 evaluation.py:167] Evaluation [40/100]
00:00:57 I0803 19:36:22.173295 140035881592640 evaluation.py:167] Evaluation [50/100]
00:01:05 I0803 19:36:30.140442 140035881592640 evaluation.py:167] Evaluation [60/100]
00:01:13 I0803 19:36:38.273287 140035881592640 evaluation.py:167] Evaluation [70/100]
00:01:21 I0803 19:36:46.298004 140035881592640 evaluation.py:167] Evaluation [80/100]
00:01:29 I0803 19:36:54.224018 140035881592640 evaluation.py:167] Evaluation [90/100]
00:01:37 I0803 19:37:02.147754 140035881592640 evaluation.py:167] Evaluation [100/100]
00:01:37 I0803 19:37:02.250945 140035881592640 evaluation.py:275] Finished evaluation at 2019-08-03-19:37:02
00:01:37 I0803 19:37:02.251356 140035881592640 estimator.py:2039] Saving dict for global step 700000: global_step = 700000, loss = 1.5803518, masked_lm_accuracy = 0.7170071, masked_lm_loss = 1.3221492, next_sentence_accuracy = 0.9075, next_sentence_loss = 0.26003337
00:01:37 I0803 19:37:02.844877 140035881592640 estimator.py:2099] Saving 'checkpoint_path' summary for global step 700000: /root/w266-final/eval/10-q/ckpt/FinBERT-Prime_128MSL-500K_512MSL-200K/model.ckpt-700000
00:01:37 I0803 19:37:02.845693 140035881592640 error_handling.py:96] evaluation_loop marked as finished
00:01:37 I0803 19:37:02.845968 140035881592640 run_pretraining.py:485] ***** Eval results *****
00:01:37 I0803 19:37:02.846150 140035881592640 run_pretraining.py:487]   global_step = 700000
00:01:37 I0803 19:37:02.846415 140035881592640 run_pretraining.py:487]   loss = 1.5803518
00:01:37 I0803 19:37:02.846596 140035881592640 run_pretraining.py:487]   masked_lm_accuracy = 0.7170071
00:01:37 I0803 19:37:02.846808 140035881592640 run_pretraining.py:487]   masked_lm_loss = 1.3221492
00:01:37 I0803 19:37:02.846969 140035881592640 run_pretraining.py:487]   next_sentence_accuracy = 0.9075
00:01:37 I0803 19:37:02.847127 140035881592640 run_pretraining.py:487]   next_sentence_loss = 0.26003337
