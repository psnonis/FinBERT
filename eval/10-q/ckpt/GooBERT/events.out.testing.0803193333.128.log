00:00:02 WARNING: Logging before flag parsing goes to stderr.
00:00:02 W0803 19:33:35.849985 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.
00:00:02 
00:00:02 W0803 19:33:35.850357 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:26: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.
00:00:02 
00:00:02 W0803 19:33:35.851344 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:495: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.
00:00:02 
00:00:02 W0803 19:33:35.851962 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.
00:00:02 
00:00:02 W0803 19:33:35.852125 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.
00:00:02 
00:00:02 W0803 19:33:35.852295 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.
00:00:02 
00:00:02 W0803 19:33:35.862455 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:416: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.
00:00:02 
00:00:02 W0803 19:33:35.862732 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:420: The name tf.gfile.Glob is deprecated. Please use tf.io.gfile.glob instead.
00:00:02 
00:00:02 W0803 19:33:35.946314 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:422: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.
00:00:02 
00:00:02 I0803 19:33:35.946561 140035082835776 run_pretraining.py:422] *** Input Files ***
00:00:02 I0803 19:33:35.946705 140035082835776 run_pretraining.py:424]   /root/w266-final/eval/10-q/data/2018.tfrecord.sm-128-20
00:00:06 W0803 19:33:39.896864 140035082835776 lazy_loader.py:50] 
00:00:06 The TensorFlow contrib module will not be included in TensorFlow 2.0.
00:00:06 For more information, please see:
00:00:06   * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
00:00:06   * https://github.com/tensorflow/addons
00:00:06   * https://github.com/tensorflow/io (for I/O related ops)
00:00:06 If you depend on functionality not listed there, please file an issue.
00:00:06 
00:00:06 W0803 19:33:39.897528 140035082835776 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7f5c40889e18>) includes params argument, but params are not passed to Estimator.
00:00:06 I0803 19:33:39.898912 140035082835776 estimator.py:209] Using config: {'_model_dir': '/root/w266-final/eval/10-q/ckpt/GooBERT', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
00:00:06 graph_options {
00:00:06   rewrite_options {
00:00:06     meta_optimizer_iterations: ONE
00:00:06   }
00:00:06 }
00:00:06 , '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f5c4011cfd0>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
00:00:06 I0803 19:33:39.899589 140035082835776 tpu_context.py:209] _TPUContext: eval_on_tpu True
00:00:06 W0803 19:33:39.900101 140035082835776 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
00:00:06 I0803 19:33:39.900233 140035082835776 run_pretraining.py:471] ***** Running evaluation *****
00:00:06 I0803 19:33:39.900342 140035082835776 run_pretraining.py:472]   Batch size = 8
00:00:06 W0803 19:33:39.945798 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:339: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.
00:00:06 
00:00:06 W0803 19:33:39.972808 140035082835776 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:387: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
00:00:06 Instructions for updating:
00:00:06 Use `tf.data.experimental.map_and_batch(...)`.
00:00:06 W0803 19:33:39.972976 140035082835776 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
00:00:06 Instructions for updating:
00:00:06 Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
00:00:06 W0803 19:33:39.974710 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:395: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.
00:00:06 
00:00:06 W0803 19:33:39.981924 140035082835776 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:402: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
00:00:06 Instructions for updating:
00:00:06 Use `tf.cast` instead.
00:00:07 I0803 19:33:40.012511 140035082835776 estimator.py:1145] Calling model_fn.
00:00:07 I0803 19:33:40.012739 140035082835776 tpu_estimator.py:2965] Running eval on CPU
00:00:07 I0803 19:33:40.013178 140035082835776 run_pretraining.py:119] *** Features ***
00:00:07 I0803 19:33:40.013356 140035082835776 run_pretraining.py:121]   name = input_ids, shape = (8, 128)
00:00:07 I0803 19:33:40.013504 140035082835776 run_pretraining.py:121]   name = input_mask, shape = (8, 128)
00:00:07 I0803 19:33:40.013643 140035082835776 run_pretraining.py:121]   name = masked_lm_ids, shape = (8, 20)
00:00:07 I0803 19:33:40.013775 140035082835776 run_pretraining.py:121]   name = masked_lm_positions, shape = (8, 20)
00:00:07 I0803 19:33:40.013903 140035082835776 run_pretraining.py:121]   name = masked_lm_weights, shape = (8, 20)
00:00:07 I0803 19:33:40.014029 140035082835776 run_pretraining.py:121]   name = next_sentence_labels, shape = (8, 1)
00:00:07 I0803 19:33:40.014152 140035082835776 run_pretraining.py:121]   name = segment_ids, shape = (8, 128)
00:00:07 W0803 19:33:40.014393 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.
00:00:07 
00:00:07 W0803 19:33:40.016518 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.
00:00:07 
00:00:07 W0803 19:33:40.100795 140035082835776 deprecation.py:323] From /root/w266-final/bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
00:00:07 Instructions for updating:
00:00:07 Use keras.layers.dense instead.
00:00:10 I0803 19:33:43.258958 140035082835776 run_pretraining.py:169] **** Trainable Variables ****
00:00:10 I0803 19:33:43.259224 140035082835776 run_pretraining.py:175]   name = bert/embeddings/word_embeddings:0, shape = (30522, 768)
00:00:10 I0803 19:33:43.259385 140035082835776 run_pretraining.py:175]   name = bert/embeddings/token_type_embeddings:0, shape = (2, 768)
00:00:10 I0803 19:33:43.259538 140035082835776 run_pretraining.py:175]   name = bert/embeddings/position_embeddings:0, shape = (512, 768)
00:00:10 I0803 19:33:43.259680 140035082835776 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.259812 140035082835776 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.259943 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.260075 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.260204 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.260332 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.260457 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.260584 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.260708 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.260843 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.260967 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.261096 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.261221 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.261347 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.261471 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.261597 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.261718 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.261839 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.261963 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.262096 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.262223 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.262351 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.262483 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.262640 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.262772 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.262901 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.263023 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.263143 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.263265 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.263390 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.263515 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.263630 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.263750 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.263869 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.263991 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.264117 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.264251 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.264380 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.264506 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.264631 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.264754 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.264878 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.264997 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.265117 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.265239 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.265370 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.265495 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.265619 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.265741 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.265870 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.265995 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.266119 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.266243 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.266367 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.266490 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.266638 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.266768 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.266894 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.267015 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.267135 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.267258 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.267381 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.267512 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.267637 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.267758 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.267879 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.268001 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.268125 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.268248 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.268380 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.268502 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.268627 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.268750 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.268875 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.268994 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.269113 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.269235 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.269359 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.269483 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.269616 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.269738 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.269858 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.269980 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.270105 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.270228 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.270352 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.270481 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.270631 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.270763 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.270896 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.271020 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.271151 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.271285 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.271413 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.271538 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.271663 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.271784 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.271903 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.272025 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.272150 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.272271 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.272395 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.272518 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.272706 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.272839 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.272966 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.273087 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.273205 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.273327 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.273462 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.273589 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.273714 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.273834 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.273954 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.274076 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.274199 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.274329 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.274454 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.274576 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.274734 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.274859 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.274983 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.275103 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.275226 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.275358 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.275483 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.275607 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.275732 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.275853 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.275973 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.276095 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.276219 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.276342 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.276466 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.276590 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.276714 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.276838 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.276965 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.277089 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.277211 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.277358 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.277486 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.277617 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.277744 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.277865 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.277985 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.278106 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.278236 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.278359 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.278489 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.278638 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.278770 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.278894 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.279020 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.279129 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.279247 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.279368 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.279492 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.279614 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.279737 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.279857 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.279974 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.280094 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.280225 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.280348 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.280471 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.280593 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.280716 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.280839 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.280969 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.281100 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.281224 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.281350 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.281479 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.281603 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.281728 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.281848 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.281967 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.282088 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.282213 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.282335 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.282459 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.282581 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.282735 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.282860 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.282982 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.283101 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.283226 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.283345 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:10 I0803 19:33:43.283471 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,)
00:00:10 I0803 19:33:43.283593 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768)
00:00:10 I0803 19:33:43.283716 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.283834 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.283950 140035082835776 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.284068 140035082835776 run_pretraining.py:175]   name = bert/pooler/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.284197 140035082835776 run_pretraining.py:175]   name = bert/pooler/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.284319 140035082835776 run_pretraining.py:175]   name = cls/predictions/transform/dense/kernel:0, shape = (768, 768)
00:00:10 I0803 19:33:43.284443 140035082835776 run_pretraining.py:175]   name = cls/predictions/transform/dense/bias:0, shape = (768,)
00:00:10 I0803 19:33:43.284565 140035082835776 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/beta:0, shape = (768,)
00:00:10 I0803 19:33:43.284683 140035082835776 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/gamma:0, shape = (768,)
00:00:10 I0803 19:33:43.284801 140035082835776 run_pretraining.py:175]   name = cls/predictions/output_bias:0, shape = (30522,)
00:00:10 I0803 19:33:43.284924 140035082835776 run_pretraining.py:175]   name = cls/seq_relationship/output_weights:0, shape = (2, 768)
00:00:10 I0803 19:33:43.285052 140035082835776 run_pretraining.py:175]   name = cls/seq_relationship/output_bias:0, shape = (2,)
00:00:10 W0803 19:33:43.293467 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:200: The name tf.metrics.accuracy is deprecated. Please use tf.compat.v1.metrics.accuracy instead.
00:00:10 
00:00:10 W0803 19:33:43.315814 140035082835776 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:204: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.
00:00:10 
00:00:10 I0803 19:33:43.379750 140035082835776 estimator.py:1147] Done calling model_fn.
00:00:10 I0803 19:33:43.406879 140035082835776 evaluation.py:255] Starting evaluation at 2019-08-03T19:33:43Z
00:00:10 W0803 19:33:43.639157 140035082835776 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
00:00:10 Instructions for updating:
00:00:10 Use tf.where in 2.0, which has the same broadcast rule as np.where
00:00:11 I0803 19:33:44.130546 140035082835776 monitored_session.py:240] Graph was finalized.
00:00:11 2019-08-03 19:33:44.131034: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
00:00:11 2019-08-03 19:33:44.140584: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2000024999 Hz
00:00:11 2019-08-03 19:33:44.141438: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x5aa8310 executing computations on platform Host. Devices:
00:00:11 2019-08-03 19:33:44.141473: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
00:00:11 W0803 19:33:44.142462 140035082835776 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
00:00:11 Instructions for updating:
00:00:11 Use standard file APIs to check for files with this prefix.
00:00:11 I0803 19:33:44.143938 140035082835776 saver.py:1280] Restoring parameters from /root/w266-final/eval/10-q/ckpt/GooBERT/model.ckpt
00:00:11 2019-08-03 19:33:44.442281: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
00:00:21 I0803 19:33:54.355572 140035082835776 session_manager.py:500] Running local_init_op.
00:00:21 I0803 19:33:54.408838 140035082835776 session_manager.py:502] Done running local_init_op.
00:00:31 I0803 19:34:04.448881 140035082835776 evaluation.py:167] Evaluation [10/100]
00:00:40 I0803 19:34:13.525451 140035082835776 evaluation.py:167] Evaluation [20/100]
00:00:49 I0803 19:34:22.484898 140035082835776 evaluation.py:167] Evaluation [30/100]
00:00:58 I0803 19:34:31.492855 140035082835776 evaluation.py:167] Evaluation [40/100]
00:01:07 I0803 19:34:40.511656 140035082835776 evaluation.py:167] Evaluation [50/100]
00:01:16 I0803 19:34:49.452981 140035082835776 evaluation.py:167] Evaluation [60/100]
00:01:25 I0803 19:34:58.521428 140035082835776 evaluation.py:167] Evaluation [70/100]
00:01:34 I0803 19:35:07.575115 140035082835776 evaluation.py:167] Evaluation [80/100]
00:01:43 I0803 19:35:16.605545 140035082835776 evaluation.py:167] Evaluation [90/100]
00:01:51 I0803 19:35:24.794523 140035082835776 evaluation.py:167] Evaluation [100/100]
00:01:51 I0803 19:35:24.901088 140035082835776 evaluation.py:275] Finished evaluation at 2019-08-03-19:35:24
00:01:51 I0803 19:35:24.901526 140035082835776 estimator.py:2039] Saving dict for global step 0: global_step = 0, loss = 5.3645744, masked_lm_accuracy = 0.5118789, masked_lm_loss = 3.17137, next_sentence_accuracy = 0.60875, next_sentence_loss = 2.191386
00:01:52 I0803 19:35:25.490914 140035082835776 estimator.py:2099] Saving 'checkpoint_path' summary for global step 0: /root/w266-final/eval/10-q/ckpt/GooBERT/model.ckpt
00:01:52 I0803 19:35:25.491797 140035082835776 error_handling.py:96] evaluation_loop marked as finished
00:01:52 I0803 19:35:25.492081 140035082835776 run_pretraining.py:485] ***** Eval results *****
00:01:52 I0803 19:35:25.492285 140035082835776 run_pretraining.py:487]   global_step = 0
00:01:52 I0803 19:35:25.492649 140035082835776 run_pretraining.py:487]   loss = 5.3645744
00:01:52 I0803 19:35:25.492837 140035082835776 run_pretraining.py:487]   masked_lm_accuracy = 0.5118789
00:01:52 I0803 19:35:25.493046 140035082835776 run_pretraining.py:487]   masked_lm_loss = 3.17137
00:01:52 I0803 19:35:25.493227 140035082835776 run_pretraining.py:487]   next_sentence_accuracy = 0.60875
00:01:52 I0803 19:35:25.493417 140035082835776 run_pretraining.py:487]   next_sentence_loss = 2.191386
