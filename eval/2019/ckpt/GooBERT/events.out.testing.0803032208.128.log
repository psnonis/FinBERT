00:00:03 WARNING: Logging before flag parsing goes to stderr.
00:00:03 W0803 03:22:11.100611 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.
00:00:03 
00:00:03 W0803 03:22:11.100956 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:26: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.
00:00:03 
00:00:03 W0803 03:22:11.101911 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:495: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.
00:00:03 
00:00:03 W0803 03:22:11.102526 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.
00:00:03 
00:00:03 W0803 03:22:11.102719 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:409: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.
00:00:03 
00:00:03 W0803 03:22:11.102895 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.
00:00:03 
00:00:03 W0803 03:22:11.103614 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:416: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.
00:00:03 
00:00:03 W0803 03:22:11.103816 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:420: The name tf.gfile.Glob is deprecated. Please use tf.io.gfile.glob instead.
00:00:03 
00:00:03 W0803 03:22:11.105565 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:422: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.
00:00:03 
00:00:03 I0803 03:22:11.105712 140368947713856 run_pretraining.py:422] *** Input Files ***
00:00:03 I0803 03:22:11.105806 140368947713856 run_pretraining.py:424]   /root/w266-final/eval/2019/2019.tfrecord.05-128-20
00:00:03 I0803 03:22:11.105899 140368947713856 run_pretraining.py:424]   /root/w266-final/eval/2019/2019.tfrecord.06-128-20
00:00:03 I0803 03:22:11.105986 140368947713856 run_pretraining.py:424]   /root/w266-final/eval/2019/2019.tfrecord.04-128-20
00:00:03 I0803 03:22:11.106071 140368947713856 run_pretraining.py:424]   /root/w266-final/eval/2019/2019.tfrecord.01-128-20
00:00:03 I0803 03:22:11.106153 140368947713856 run_pretraining.py:424]   /root/w266-final/eval/2019/2019.tfrecord.00-128-20
00:00:03 I0803 03:22:11.106234 140368947713856 run_pretraining.py:424]   /root/w266-final/eval/2019/2019.tfrecord.07-128-20
00:00:03 I0803 03:22:11.106312 140368947713856 run_pretraining.py:424]   /root/w266-final/eval/2019/2019.tfrecord.03-128-20
00:00:03 I0803 03:22:11.106390 140368947713856 run_pretraining.py:424]   /root/w266-final/eval/2019/2019.tfrecord.02-128-20
00:00:03 W0803 03:22:11.647438 140368947713856 lazy_loader.py:50] 
00:00:03 The TensorFlow contrib module will not be included in TensorFlow 2.0.
00:00:03 For more information, please see:
00:00:03   * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
00:00:03   * https://github.com/tensorflow/addons
00:00:03   * https://github.com/tensorflow/io (for I/O related ops)
00:00:03 If you depend on functionality not listed there, please file an issue.
00:00:03 
00:00:03 W0803 03:22:11.648083 140368947713856 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7fa9fc6e2e18>) includes params argument, but params are not passed to Estimator.
00:00:03 I0803 03:22:11.649315 140368947713856 estimator.py:209] Using config: {'_model_dir': '/root/w266-final/eval/ckpt/GooBERT', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
00:00:03 graph_options {
00:00:03   rewrite_options {
00:00:03     meta_optimizer_iterations: ONE
00:00:03   }
00:00:03 }
00:00:03 , '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7faa21ae16d8>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
00:00:03 I0803 03:22:11.649981 140368947713856 tpu_context.py:209] _TPUContext: eval_on_tpu True
00:00:03 W0803 03:22:11.650486 140368947713856 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
00:00:03 I0803 03:22:11.650656 140368947713856 run_pretraining.py:471] ***** Running evaluation *****
00:00:03 I0803 03:22:11.650769 140368947713856 run_pretraining.py:472]   Batch size = 8
00:00:03 W0803 03:22:11.661410 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:339: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.
00:00:03 
00:00:03 W0803 03:22:11.687644 140368947713856 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:387: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.data.experimental.map_and_batch(...)`.
00:00:03 W0803 03:22:11.687809 140368947713856 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
00:00:03 W0803 03:22:11.689524 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:395: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.
00:00:03 
00:00:03 W0803 03:22:11.696666 140368947713856 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:402: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.cast` instead.
00:00:03 I0803 03:22:11.727138 140368947713856 estimator.py:1145] Calling model_fn.
00:00:03 I0803 03:22:11.727371 140368947713856 tpu_estimator.py:2965] Running eval on CPU
00:00:03 I0803 03:22:11.727811 140368947713856 run_pretraining.py:119] *** Features ***
00:00:03 I0803 03:22:11.727986 140368947713856 run_pretraining.py:121]   name = input_ids, shape = (8, 128)
00:00:03 I0803 03:22:11.728132 140368947713856 run_pretraining.py:121]   name = input_mask, shape = (8, 128)
00:00:03 I0803 03:22:11.728267 140368947713856 run_pretraining.py:121]   name = masked_lm_ids, shape = (8, 20)
00:00:03 I0803 03:22:11.728400 140368947713856 run_pretraining.py:121]   name = masked_lm_positions, shape = (8, 20)
00:00:03 I0803 03:22:11.728529 140368947713856 run_pretraining.py:121]   name = masked_lm_weights, shape = (8, 20)
00:00:03 I0803 03:22:11.728655 140368947713856 run_pretraining.py:121]   name = next_sentence_labels, shape = (8, 1)
00:00:03 I0803 03:22:11.728778 140368947713856 run_pretraining.py:121]   name = segment_ids, shape = (8, 128)
00:00:03 W0803 03:22:11.729019 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.
00:00:03 
00:00:03 W0803 03:22:11.731134 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.
00:00:03 
00:00:03 W0803 03:22:11.814215 140368947713856 deprecation.py:323] From /root/w266-final/bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use keras.layers.dense instead.
00:00:06 I0803 03:22:14.878144 140368947713856 run_pretraining.py:169] **** Trainable Variables ****
00:00:06 I0803 03:22:14.878402 140368947713856 run_pretraining.py:175]   name = bert/embeddings/word_embeddings:0, shape = (30522, 768)
00:00:06 I0803 03:22:14.878553 140368947713856 run_pretraining.py:175]   name = bert/embeddings/token_type_embeddings:0, shape = (2, 768)
00:00:06 I0803 03:22:14.878736 140368947713856 run_pretraining.py:175]   name = bert/embeddings/position_embeddings:0, shape = (512, 768)
00:00:06 I0803 03:22:14.878877 140368947713856 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.879008 140368947713856 run_pretraining.py:175]   name = bert/embeddings/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.879137 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.879267 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.879394 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.879524 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.879650 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.879777 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.879902 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.880037 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.880160 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.880280 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.880400 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.880523 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.880647 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.880771 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.880892 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.881011 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.881133 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.881258 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.881380 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.881503 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.881624 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.881754 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.881877 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.882001 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.882121 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.882240 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.882361 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.882485 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.882632 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.882763 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.882885 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.883019 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.883152 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.883286 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.883413 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.883545 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.883671 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.883797 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.883919 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.884043 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.884161 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.884279 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.884399 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.884521 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.884643 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.884766 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.884885 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.885004 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.885126 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.885249 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.885370 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.885493 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.885614 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.885738 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.885865 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.885990 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.886111 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.886229 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.886349 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.886474 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.886594 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.886750 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.886871 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.886991 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.887125 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.887253 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.887376 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.887499 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.887621 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.887744 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.887865 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.887989 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.888108 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.888227 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.888347 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.888469 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.888591 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.888714 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.888840 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.888961 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.889083 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.889205 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.889327 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.889450 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.889572 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.889696 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.889818 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.889950 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.890072 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.890192 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.890313 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.890437 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.890560 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.890714 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.890845 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.890974 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.891098 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.891226 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.891348 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.891472 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.891595 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.891781 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.891916 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.892042 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.892162 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.892282 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.892409 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.892534 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.892657 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.892781 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.892902 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.893022 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.893154 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.893279 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.893401 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.893524 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.893647 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.893770 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.893891 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.894015 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.894133 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.894252 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.894380 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.894503 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.894653 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.894796 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.894918 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.895037 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.895158 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.895281 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.895402 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.895526 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.895648 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.895772 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.895894 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.896016 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.896136 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.896255 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.896375 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.896498 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.896620 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.896751 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.896873 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.896993 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.897113 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.897237 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.897359 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.897481 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.897613 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.897745 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.897867 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.897990 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.898108 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.898226 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.898346 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.898478 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.898602 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.898764 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.898887 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.899007 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.899130 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.899254 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.899373 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.899495 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.899617 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.899741 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.899862 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.899984 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.900102 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.900220 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.900338 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.900460 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.900585 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.900710 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.900827 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.900944 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.901063 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.901185 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.901305 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.901428 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.901547 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.901668 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.901787 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.901907 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.902024 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.902151 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.902272 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 03:22:14.902393 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 03:22:14.902512 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 03:22:14.902659 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.902782 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.902904 140368947713856 run_pretraining.py:175]   name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.903025 140368947713856 run_pretraining.py:175]   name = bert/pooler/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.903159 140368947713856 run_pretraining.py:175]   name = bert/pooler/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.903286 140368947713856 run_pretraining.py:175]   name = cls/predictions/transform/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 03:22:14.903409 140368947713856 run_pretraining.py:175]   name = cls/predictions/transform/dense/bias:0, shape = (768,)
00:00:06 I0803 03:22:14.903535 140368947713856 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 03:22:14.903651 140368947713856 run_pretraining.py:175]   name = cls/predictions/transform/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 03:22:14.903768 140368947713856 run_pretraining.py:175]   name = cls/predictions/output_bias:0, shape = (30522,)
00:00:06 I0803 03:22:14.903887 140368947713856 run_pretraining.py:175]   name = cls/seq_relationship/output_weights:0, shape = (2, 768)
00:00:06 I0803 03:22:14.904009 140368947713856 run_pretraining.py:175]   name = cls/seq_relationship/output_bias:0, shape = (2,)
00:00:06 W0803 03:22:14.912297 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:200: The name tf.metrics.accuracy is deprecated. Please use tf.compat.v1.metrics.accuracy instead.
00:00:06 
00:00:06 W0803 03:22:14.934298 140368947713856 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:204: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.
00:00:06 
00:00:06 I0803 03:22:14.997458 140368947713856 estimator.py:1147] Done calling model_fn.
00:00:07 I0803 03:22:15.024548 140368947713856 evaluation.py:255] Starting evaluation at 2019-08-03T03:22:15Z
00:00:07 W0803 03:22:15.254597 140368947713856 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
00:00:07 Instructions for updating:
00:00:07 Use tf.where in 2.0, which has the same broadcast rule as np.where
00:00:07 I0803 03:22:15.736463 140368947713856 monitored_session.py:240] Graph was finalized.
00:00:07 2019-08-03 03:22:15.736913: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
00:00:07 2019-08-03 03:22:15.746233: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2000024999 Hz
00:00:07 2019-08-03 03:22:15.747107: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x501edf0 executing computations on platform Host. Devices:
00:00:07 2019-08-03 03:22:15.747140: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
00:00:07 W0803 03:22:15.748136 140368947713856 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
00:00:07 Instructions for updating:
00:00:07 Use standard file APIs to check for files with this prefix.
00:00:07 I0803 03:22:15.749465 140368947713856 saver.py:1280] Restoring parameters from /root/w266-final/eval/ckpt/GooBERT/model.ckpt
00:00:08 2019-08-03 03:22:16.046196: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
00:00:08 I0803 03:22:16.614785 140368947713856 session_manager.py:500] Running local_init_op.
00:00:08 I0803 03:22:16.664312 140368947713856 session_manager.py:502] Done running local_init_op.
00:00:17 I0803 03:22:25.510704 140368947713856 evaluation.py:167] Evaluation [10/100]
00:00:25 I0803 03:22:33.463120 140368947713856 evaluation.py:167] Evaluation [20/100]
00:00:33 I0803 03:22:41.435591 140368947713856 evaluation.py:167] Evaluation [30/100]
00:00:41 I0803 03:22:49.432488 140368947713856 evaluation.py:167] Evaluation [40/100]
00:00:49 I0803 03:22:57.413938 140368947713856 evaluation.py:167] Evaluation [50/100]
00:00:57 I0803 03:23:05.374414 140368947713856 evaluation.py:167] Evaluation [60/100]
00:01:05 I0803 03:23:13.316128 140368947713856 evaluation.py:167] Evaluation [70/100]
00:01:13 I0803 03:23:21.197405 140368947713856 evaluation.py:167] Evaluation [80/100]
00:01:21 I0803 03:23:29.170176 140368947713856 evaluation.py:167] Evaluation [90/100]
00:01:29 I0803 03:23:37.122078 140368947713856 evaluation.py:167] Evaluation [100/100]
00:01:29 I0803 03:23:37.218722 140368947713856 evaluation.py:275] Finished evaluation at 2019-08-03-03:23:37
00:01:29 I0803 03:23:37.219152 140368947713856 estimator.py:2039] Saving dict for global step 0: global_step = 0, loss = 5.3790455, masked_lm_accuracy = 0.5116361, masked_lm_loss = 3.217818, next_sentence_accuracy = 0.62375, next_sentence_loss = 2.161395
00:01:29 I0803 03:23:37.795676 140368947713856 estimator.py:2099] Saving 'checkpoint_path' summary for global step 0: /root/w266-final/eval/ckpt/GooBERT/model.ckpt
00:01:29 I0803 03:23:37.796531 140368947713856 error_handling.py:96] evaluation_loop marked as finished
00:01:29 I0803 03:23:37.796809 140368947713856 run_pretraining.py:485] ***** Eval results *****
00:01:29 I0803 03:23:37.796989 140368947713856 run_pretraining.py:487]   global_step = 0
00:01:29 I0803 03:23:37.797268 140368947713856 run_pretraining.py:487]   loss = 5.3790455
00:01:29 I0803 03:23:37.797449 140368947713856 run_pretraining.py:487]   masked_lm_accuracy = 0.5116361
00:01:29 I0803 03:23:37.797613 140368947713856 run_pretraining.py:487]   masked_lm_loss = 3.217818
00:01:29 I0803 03:23:37.797770 140368947713856 run_pretraining.py:487]   next_sentence_accuracy = 0.62375
00:01:29 I0803 03:23:37.797930 140368947713856 run_pretraining.py:487]   next_sentence_loss = 2.161395
