00:00:03 WARNING: Logging before flag parsing goes to stderr.
00:00:03 W0803 00:35:12.082471 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/optimization.py:87: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.
00:00:03 
00:00:03 W0803 00:35:12.083642 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:493: The name tf.app.run is deprecated. Please use tf.compat.v1.app.run instead.
00:00:03 
00:00:03 W0803 00:35:12.084272 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:407: The name tf.logging.set_verbosity is deprecated. Please use tf.compat.v1.logging.set_verbosity instead.
00:00:03 
00:00:03 W0803 00:35:12.084437 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:407: The name tf.logging.INFO is deprecated. Please use tf.compat.v1.logging.INFO instead.
00:00:03 
00:00:03 W0803 00:35:12.084608 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:93: The name tf.gfile.GFile is deprecated. Please use tf.io.gfile.GFile instead.
00:00:03 
00:00:03 W0803 00:35:12.085332 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:414: The name tf.gfile.MakeDirs is deprecated. Please use tf.io.gfile.makedirs instead.
00:00:03 
00:00:03 W0803 00:35:12.085534 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:418: The name tf.gfile.Glob is deprecated. Please use tf.io.gfile.glob instead.
00:00:03 
00:00:03 W0803 00:35:12.087281 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:420: The name tf.logging.info is deprecated. Please use tf.compat.v1.logging.info instead.
00:00:03 
00:00:03 I0803 00:35:12.087405 140168903796544 run_pretraining.py:420] *** Input Files ***
00:00:03 I0803 00:35:12.087495 140168903796544 run_pretraining.py:422]   /root/w266-final/eval/2019/2019.tfrecord.05-128-20
00:00:03 I0803 00:35:12.087583 140168903796544 run_pretraining.py:422]   /root/w266-final/eval/2019/2019.tfrecord.06-128-20
00:00:03 I0803 00:35:12.087667 140168903796544 run_pretraining.py:422]   /root/w266-final/eval/2019/2019.tfrecord.04-128-20
00:00:03 I0803 00:35:12.087750 140168903796544 run_pretraining.py:422]   /root/w266-final/eval/2019/2019.tfrecord.01-128-20
00:00:03 I0803 00:35:12.087830 140168903796544 run_pretraining.py:422]   /root/w266-final/eval/2019/2019.tfrecord.00-128-20
00:00:03 I0803 00:35:12.087901 140168903796544 run_pretraining.py:422]   /root/w266-final/eval/2019/2019.tfrecord.07-128-20
00:00:03 I0803 00:35:12.087977 140168903796544 run_pretraining.py:422]   /root/w266-final/eval/2019/2019.tfrecord.03-128-20
00:00:03 I0803 00:35:12.088055 140168903796544 run_pretraining.py:422]   /root/w266-final/eval/2019/2019.tfrecord.02-128-20
00:00:03 W0803 00:35:12.627235 140168903796544 lazy_loader.py:50] 
00:00:03 The TensorFlow contrib module will not be included in TensorFlow 2.0.
00:00:03 For more information, please see:
00:00:03   * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md
00:00:03   * https://github.com/tensorflow/addons
00:00:03   * https://github.com/tensorflow/io (for I/O related ops)
00:00:03 If you depend on functionality not listed there, please file an issue.
00:00:03 
00:00:03 W0803 00:35:12.627872 140168903796544 estimator.py:1984] Estimator's model_fn (<function model_fn_builder.<locals>.model_fn at 0x7f7b68e23e18>) includes params argument, but params are not passed to Estimator.
00:00:03 I0803 00:35:12.629143 140168903796544 estimator.py:209] Using config: {'_model_dir': '/root/w266-final/eval/ckpt/FinBERT-Combo_128MSL-250K', '_tf_random_seed': None, '_save_summary_steps': 100, '_save_checkpoints_steps': 1000, '_save_checkpoints_secs': None, '_session_config': allow_soft_placement: true
00:00:03 graph_options {
00:00:03   rewrite_options {
00:00:03     meta_optimizer_iterations: ONE
00:00:03   }
00:00:03 }
00:00:03 , '_keep_checkpoint_max': 5, '_keep_checkpoint_every_n_hours': 10000, '_log_step_count_steps': None, '_train_distribute': None, '_device_fn': None, '_protocol': None, '_eval_distribute': None, '_experimental_distribute': None, '_experimental_max_worker_delay_secs': None, '_service': None, '_cluster_spec': <tensorflow.python.training.server_lib.ClusterSpec object at 0x7f7b8e223668>, '_task_type': 'worker', '_task_id': 0, '_global_id_in_cluster': 0, '_master': '', '_evaluation_master': '', '_is_chief': True, '_num_ps_replicas': 0, '_num_worker_replicas': 1, '_tpu_config': TPUConfig(iterations_per_loop=1000, num_shards=8, num_cores_per_replica=None, per_host_input_for_training=3, tpu_job_name=None, initial_infeed_sleep_secs=None, input_partition_dims=None, eval_training_input_configuration=2), '_cluster': None}
00:00:03 I0803 00:35:12.629819 140168903796544 tpu_context.py:209] _TPUContext: eval_on_tpu True
00:00:03 W0803 00:35:12.630329 140168903796544 tpu_context.py:211] eval_on_tpu ignored because use_tpu is False.
00:00:03 I0803 00:35:12.630471 140168903796544 run_pretraining.py:469] ***** Running evaluation *****
00:00:03 I0803 00:35:12.630578 140168903796544 run_pretraining.py:470]   Batch size = 8
00:00:03 W0803 00:35:12.677206 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:337: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.
00:00:03 
00:00:03 W0803 00:35:12.703779 140168903796544 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:385: map_and_batch (from tensorflow.contrib.data.python.ops.batching) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.data.experimental.map_and_batch(...)`.
00:00:03 W0803 00:35:12.703943 140168903796544 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/contrib/data/python/ops/batching.py:273: map_and_batch (from tensorflow.python.data.experimental.ops.batching) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.data.Dataset.map(map_func, num_parallel_calls)` followed by `tf.data.Dataset.batch(batch_size, drop_remainder)`. Static tf.data optimizations will take care of using the fused implementation.
00:00:03 W0803 00:35:12.705638 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:393: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.
00:00:03 
00:00:03 W0803 00:35:12.712681 140168903796544 deprecation.py:323] From /root/w266-final/bert/run_pretraining.py:400: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use `tf.cast` instead.
00:00:03 I0803 00:35:12.742912 140168903796544 estimator.py:1145] Calling model_fn.
00:00:03 I0803 00:35:12.743133 140168903796544 tpu_estimator.py:2965] Running eval on CPU
00:00:03 I0803 00:35:12.743572 140168903796544 run_pretraining.py:117] *** Features ***
00:00:03 I0803 00:35:12.743748 140168903796544 run_pretraining.py:119]   name = input_ids, shape = (8, 128)
00:00:03 I0803 00:35:12.743884 140168903796544 run_pretraining.py:119]   name = input_mask, shape = (8, 128)
00:00:03 I0803 00:35:12.744009 140168903796544 run_pretraining.py:119]   name = masked_lm_ids, shape = (8, 20)
00:00:03 I0803 00:35:12.744127 140168903796544 run_pretraining.py:119]   name = masked_lm_positions, shape = (8, 20)
00:00:03 I0803 00:35:12.744255 140168903796544 run_pretraining.py:119]   name = masked_lm_weights, shape = (8, 20)
00:00:03 I0803 00:35:12.744382 140168903796544 run_pretraining.py:119]   name = next_sentence_labels, shape = (8, 1)
00:00:03 I0803 00:35:12.744504 140168903796544 run_pretraining.py:119]   name = segment_ids, shape = (8, 128)
00:00:03 W0803 00:35:12.744741 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:171: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.
00:00:03 
00:00:03 W0803 00:35:12.746822 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:409: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.
00:00:03 
00:00:03 W0803 00:35:12.778429 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/modeling.py:490: The name tf.assert_less_equal is deprecated. Please use tf.compat.v1.assert_less_equal instead.
00:00:03 
00:00:03 W0803 00:35:12.829528 140168903796544 deprecation.py:323] From /root/w266-final/bert/modeling.py:671: dense (from tensorflow.python.layers.core) is deprecated and will be removed in a future version.
00:00:03 Instructions for updating:
00:00:03 Use keras.layers.dense instead.
00:00:06 I0803 00:35:15.874422 140168903796544 run_pretraining.py:167] **** Trainable Variables ****
00:00:06 I0803 00:35:15.874703 140168903796544 run_pretraining.py:173]   name = bert/embeddings/word_embeddings:0, shape = (30522, 768)
00:00:06 I0803 00:35:15.874860 140168903796544 run_pretraining.py:173]   name = bert/embeddings/token_type_embeddings:0, shape = (2, 768)
00:00:06 I0803 00:35:15.875011 140168903796544 run_pretraining.py:173]   name = bert/embeddings/position_embeddings:0, shape = (512, 768)
00:00:06 I0803 00:35:15.875154 140168903796544 run_pretraining.py:173]   name = bert/embeddings/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.875289 140168903796544 run_pretraining.py:173]   name = bert/embeddings/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.875437 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.875572 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.875699 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.875829 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.875958 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.876088 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.876217 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.876352 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.876476 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.876599 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.876724 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.876852 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.876976 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.877104 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.877235 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.877358 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_0/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.877480 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.877607 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.877732 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.877857 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.877981 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.878107 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.878232 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.878357 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.878479 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.878600 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.878758 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.878884 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.879009 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.879135 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.879258 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.879393 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_1/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.879518 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.879646 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.879772 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.879909 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.880041 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.880171 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.880297 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.880422 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.880544 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.880665 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.880788 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.880914 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.881039 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.881165 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.881288 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.881410 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_2/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.881534 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.881659 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.881784 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.881919 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.882047 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.882175 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.882292 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.882418 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.882539 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.882694 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.882823 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.882951 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.883077 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.883206 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.883331 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.883453 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_3/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.883579 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.883715 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.883844 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.883972 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.884097 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.884223 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.884347 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.884473 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.884594 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.884716 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.884841 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.884967 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.885092 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.885220 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.885349 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.885482 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_4/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.885607 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.885734 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.885858 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.885984 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.886108 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.886234 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.886348 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.886472 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.886596 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.886751 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.886876 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.887003 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.887129 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.887257 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.887387 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.887514 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_5/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.887648 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.887776 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.887900 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.888045 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.888171 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.888361 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.888496 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.888631 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.888756 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.888881 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.889005 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.889131 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.889255 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.889381 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.889503 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.889625 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_6/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.889747 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.889874 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.889999 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.890126 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.890249 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.890376 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.890501 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.890655 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.890784 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.890907 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.891030 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.891158 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.891283 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.891425 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.891550 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.891672 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_7/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.891796 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.891923 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.892047 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.892174 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.892300 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.892427 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.892552 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.892678 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.892800 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.892922 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.893045 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.893172 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.893296 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.893422 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.893551 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.893675 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_8/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.893799 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.893926 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.894051 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.894177 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.894301 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.894444 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.894570 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.894726 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.894851 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.894974 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.895098 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.895232 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.895360 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.895509 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.895640 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.895766 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_9/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.895891 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.896020 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.896144 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.896269 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.896394 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.896521 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.896645 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.896770 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.896892 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.897013 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.897136 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.897260 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.897390 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.897516 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.897638 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.897758 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_10/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.897881 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/self/query/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.898006 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/self/query/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.898130 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/self/key/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.898256 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/self/key/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.898381 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/self/value/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.898507 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/self/value/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.898658 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/output/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.898790 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.898917 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.899039 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/attention/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.899170 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/intermediate/dense/kernel:0, shape = (768, 3072)
00:00:06 I0803 00:35:15.899297 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/intermediate/dense/bias:0, shape = (3072,)
00:00:06 I0803 00:35:15.899421 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/output/dense/kernel:0, shape = (3072, 768)
00:00:06 I0803 00:35:15.899546 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/output/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.899667 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/output/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.899788 140168903796544 run_pretraining.py:173]   name = bert/encoder/layer_11/output/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.899907 140168903796544 run_pretraining.py:173]   name = bert/pooler/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.900032 140168903796544 run_pretraining.py:173]   name = bert/pooler/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.900155 140168903796544 run_pretraining.py:173]   name = cls/predictions/transform/dense/kernel:0, shape = (768, 768)
00:00:06 I0803 00:35:15.900279 140168903796544 run_pretraining.py:173]   name = cls/predictions/transform/dense/bias:0, shape = (768,)
00:00:06 I0803 00:35:15.900408 140168903796544 run_pretraining.py:173]   name = cls/predictions/transform/LayerNorm/beta:0, shape = (768,)
00:00:06 I0803 00:35:15.900528 140168903796544 run_pretraining.py:173]   name = cls/predictions/transform/LayerNorm/gamma:0, shape = (768,)
00:00:06 I0803 00:35:15.900647 140168903796544 run_pretraining.py:173]   name = cls/predictions/output_bias:0, shape = (30522,)
00:00:06 I0803 00:35:15.900767 140168903796544 run_pretraining.py:173]   name = cls/seq_relationship/output_weights:0, shape = (2, 768)
00:00:06 I0803 00:35:15.900890 140168903796544 run_pretraining.py:173]   name = cls/seq_relationship/output_bias:0, shape = (2,)
00:00:06 W0803 00:35:15.909127 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:198: The name tf.metrics.accuracy is deprecated. Please use tf.compat.v1.metrics.accuracy instead.
00:00:06 
00:00:06 W0803 00:35:15.931010 140168903796544 deprecation_wrapper.py:119] From /root/w266-final/bert/run_pretraining.py:202: The name tf.metrics.mean is deprecated. Please use tf.compat.v1.metrics.mean instead.
00:00:06 
00:00:06 I0803 00:35:15.993743 140168903796544 estimator.py:1147] Done calling model_fn.
00:00:07 I0803 00:35:16.020366 140168903796544 evaluation.py:255] Starting evaluation at 2019-08-03T00:35:16Z
00:00:07 W0803 00:35:16.249470 140168903796544 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/array_ops.py:1354: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.
00:00:07 Instructions for updating:
00:00:07 Use tf.where in 2.0, which has the same broadcast rule as np.where
00:00:07 I0803 00:35:16.730013 140168903796544 monitored_session.py:240] Graph was finalized.
00:00:07 2019-08-03 00:35:16.730456: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
00:00:07 2019-08-03 00:35:16.740102: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2000024999 Hz
00:00:07 2019-08-03 00:35:16.740940: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x400b060 executing computations on platform Host. Devices:
00:00:07 2019-08-03 00:35:16.740977: I tensorflow/compiler/xla/service/service.cc:175]   StreamExecutor device (0): <undefined>, <undefined>
00:00:07 W0803 00:35:16.741738 140168903796544 deprecation.py:323] From /usr/local/lib/python3.6/dist-packages/tensorflow/python/training/saver.py:1276: checkpoint_exists (from tensorflow.python.training.checkpoint_management) is deprecated and will be removed in a future version.
00:00:07 Instructions for updating:
00:00:07 Use standard file APIs to check for files with this prefix.
00:00:07 I0803 00:35:16.743197 140168903796544 saver.py:1280] Restoring parameters from /root/w266-final/eval/ckpt/FinBERT-Combo_128MSL-250K/model.ckpt-250000
00:00:08 2019-08-03 00:35:17.039133: W tensorflow/compiler/jit/mark_for_compilation_pass.cc:1412] (One-time warning): Not using XLA:CPU for cluster because envvar TF_XLA_FLAGS=--tf_xla_cpu_global_jit was not set.  If you want XLA:CPU, either set that envvar, or use experimental_jit_scope to enable XLA:CPU.  To confirm that XLA is active, pass --vmodule=xla_compilation_cache=1 (as a proper command-line flag, not via TF_XLA_FLAGS) or set the envvar XLA_FLAGS=--xla_hlo_profile.
00:00:14 I0803 00:35:23.420025 140168903796544 session_manager.py:500] Running local_init_op.
00:00:14 I0803 00:35:23.469724 140168903796544 session_manager.py:502] Done running local_init_op.
00:00:23 I0803 00:35:32.255730 140168903796544 evaluation.py:167] Evaluation [10/100]
00:00:31 I0803 00:35:40.115326 140168903796544 evaluation.py:167] Evaluation [20/100]
00:00:38 I0803 00:35:48.005017 140168903796544 evaluation.py:167] Evaluation [30/100]
00:00:46 I0803 00:35:55.892256 140168903796544 evaluation.py:167] Evaluation [40/100]
00:00:54 I0803 00:36:03.759402 140168903796544 evaluation.py:167] Evaluation [50/100]
00:01:02 I0803 00:36:11.623688 140168903796544 evaluation.py:167] Evaluation [60/100]
00:01:10 I0803 00:36:19.489945 140168903796544 evaluation.py:167] Evaluation [70/100]
00:01:18 I0803 00:36:27.323780 140168903796544 evaluation.py:167] Evaluation [80/100]
00:01:26 I0803 00:36:35.178174 140168903796544 evaluation.py:167] Evaluation [90/100]
00:01:33 I0803 00:36:42.997428 140168903796544 evaluation.py:167] Evaluation [100/100]
00:01:34 I0803 00:36:43.095236 140168903796544 evaluation.py:275] Finished evaluation at 2019-08-03-00:36:43
00:01:34 I0803 00:36:43.095652 140168903796544 estimator.py:2039] Saving dict for global step 250000: global_step = 250000, loss = 0.8458122, masked_lm_accuracy = 0.8058075, masked_lm_loss = 0.7961338, next_sentence_accuracy = 0.98375, next_sentence_loss = 0.051676884
00:01:34 I0803 00:36:43.688112 140168903796544 estimator.py:2099] Saving 'checkpoint_path' summary for global step 250000: /root/w266-final/eval/ckpt/FinBERT-Combo_128MSL-250K/model.ckpt-250000
00:01:34 I0803 00:36:43.688967 140168903796544 error_handling.py:96] evaluation_loop marked as finished
00:01:34 I0803 00:36:43.689245 140168903796544 run_pretraining.py:483] ***** Eval results *****
00:01:34 I0803 00:36:43.689425 140168903796544 run_pretraining.py:485]   global_step = 250000
00:01:34 I0803 00:36:43.689776 140168903796544 run_pretraining.py:485]   loss = 0.8458122
00:01:34 I0803 00:36:43.689961 140168903796544 run_pretraining.py:485]   masked_lm_accuracy = 0.8058075
00:01:34 I0803 00:36:43.690128 140168903796544 run_pretraining.py:485]   masked_lm_loss = 0.7961338
00:01:34 I0803 00:36:43.690290 140168903796544 run_pretraining.py:485]   next_sentence_accuracy = 0.98375
00:01:34 I0803 00:36:43.690451 140168903796544 run_pretraining.py:485]   next_sentence_loss = 0.051676884
